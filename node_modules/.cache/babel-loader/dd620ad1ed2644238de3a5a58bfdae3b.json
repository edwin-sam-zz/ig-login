{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwin/Desktop/React/challenges/ig-login/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\n\nconst App = () => {\n  _s();\n\n  const [isUsernameActive, setUsernameActive] = useState(false);\n  const [isPasswordActive, setPasswordActive] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleTextChange = text => {\n    setUsername(text);\n\n    if (text !== '') {\n      setIsActive(true);\n    } else {\n      setIsActive(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => handleTextChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: isUsernameActive ? 'Active' : '',\n        htmlFor: \"username\",\n        children: \"Phone number, username, or email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"has-separator\",\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floating-label-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"floating-label-field floating-label-field--s3\",\n        id: \"field-1\",\n        placeholder: \"Field 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"field-1\",\n        class: \"floating-label\",\n        children: \"Field 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"IvtYUqf3PehLC8+S+zxKuy003EM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edwin/Desktop/React/challenges/ig-login/src/App.js"],"names":["React","useState","App","isUsernameActive","setUsernameActive","isPasswordActive","setPasswordActive","username","setUsername","password","setPassword","handleTextChange","text","setIsActive","e","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCH,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACI,gBAAD,EAAmBC,iBAAnB,IAAwCL,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,gBAAgB,GAAIC,IAAD,IAAU;AACjCJ,IAAAA,WAAW,CAACI,IAAD,CAAX;;AAEF,QAAIA,IAAI,KAAK,EAAb,EAAiB;AACfC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GARC;;AAUA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAEN,QAA1C;AAAoD,QAAA,QAAQ,EAAGO,CAAD,IAAOH,gBAAgB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAArF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,SAAS,EAAEb,gBAAgB,GAAG,QAAH,GAAc,EAAhD;AAAmD,QAAA,OAAO,EAAC,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAG,QAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,+CAAzB;AAAyE,QAAA,EAAE,EAAC,SAA5E;AAAsF,QAAA,WAAW,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAC,SAAX;AAAqB,QAAA,KAAK,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAsBD,CAvCD;;GAAMD,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\n\nconst App = () => {\n\n  const [isUsernameActive, setUsernameActive] = useState(false);\n  const [isPasswordActive, setPasswordActive] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleTextChange = (text) => {\n    setUsername(text);\n\n  if (text !== '') {\n    setIsActive(true);\n  } else {\n    setIsActive(false);\n  }\n}\n\n  return (\n    <>\n      <div className=\"login\">\n          <h1>Instagram</h1>\n\n          <input type=\"username\" type=\"text\" value={username} onChange={(e) => handleTextChange(e.target.value)} />\n          <label className={isUsernameActive ? 'Active' : ''}htmlFor=\"username\">Phone number, username, or email</label>\n\n          <input id=\"password\" type=\"text\" />\n          <label htmlFor=\"password\">Password</label>\n\n          <button>Log In</button>\n          <p class=\"has-separator\">Or</p>\n      </div>\n\n      <div className=\"floating-label-wrap\">\n        <input type=\"text\" class=\"floating-label-field floating-label-field--s3\" id=\"field-1\" placeholder=\"Field 1\"></input>\n        <label for=\"field-1\" class=\"floating-label\">Field 1</label>\n      </div>\n       \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}